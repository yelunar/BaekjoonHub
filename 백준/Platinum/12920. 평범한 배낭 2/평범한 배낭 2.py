import sys 
# sys.stdin = open('input2.txt')
input = sys.stdin.readline

"""
<모든 수는 2의 제곱수들의 합으로 표현할 수 있다 by 비트마스킹>
(1, 2, 4) 라는 숫자의 조합으로는 1~7까지 나타낼수가 있는데 
이에따라 (1, 2, 4, 5)의 숫자 조합으로는 1~12까지 숫자를 나타낼수 있다.
예를들어 개수가 12이고, 물건의 무게와 만족도가 각각 V, C인 물건이 입력으로 들어왔다면 
이 물건을 (V,C) (2V,2C) (4V,4C) (5V,5C)인 물건들로 분해해서 배열에 저장해주면 된다.
이때, 물건의 개수를 10개 선택했다면,
위 물건들에서 (V,C) (4V,4C) (5V,5C)인 물건을 선택했다고 생각하면 되는것이다.

이렇게 해주면 하나씩 저장 해주는것보다 저장해주는 물건의 개수가 현저히 적어지게 된다.
---------------------------------------------------------------------------------

ANS =>최대 무게를 넘기지 않게 물건을 담았을 때 민호가 느낄 수 있는 최대 만족도

!! 물품의 개수 만큼 더 추가하면 메모리 초과난다
"""

n, m = map(int, input().split()) # N 물건의 종류 M 들 수 있는 가방의 최대 무게
dp = [0 for _ in range(m+1)] # 무게로 리스트 만듬
arr = [[0, 0]] #[[0, 0], [2, 7], [1, 9], [2, 18]]

for _ in range(n):
    v, c, k = map(int, input().split()) # V 무게, C 만족도, K 물건 개수

    i = 1
    while k > 0:
        plus = min(i, k) # i 순차적으로 올리면서 곱해줌
        arr.append([v*plus, c*plus])
        k -= i
        i *=2
for weight, satisfaction in arr:
    for i in range(m, weight-1, -1):
        dp[i] = max(dp[i], dp[i-weight]+satisfaction)
        # dp[j] 째의 값과 (dp[현재 들 수 있는 최대무게 - i번째 물건의 무게] + i번째 물건의 만족도) 를 비교하여 갱신

print(dp[m])
